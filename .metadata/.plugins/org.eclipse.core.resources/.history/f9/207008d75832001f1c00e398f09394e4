package br.com.school.educanet.controller;


import java.util.List;
import java.util.Optional;

import br.com.school.educanet.repository.UserCourseRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.school.educanet.model.TbCourse;
import br.com.school.educanet.repository.CourseRepository;
import br.com.school.educanet.service.CourseService;

@RestController
public class CourseController {
	
	@Autowired
	private CourseRepository courseRepository;
	
	@Autowired
	CourseService courseService;

	@Autowired
	UserCourseRepository userCourseRepository;

	@PostMapping("/course/coursesave")
	public ResponseEntity<String> saveCourse(@RequestBody TbCourse tbCourse) {
        try {
            courseService.saveCourse(tbCourse);
        	return ResponseEntity
        			.status(HttpStatus.CONFLICT)
        			.body("Curso salvo");
        		
        } catch (RuntimeException e) {
            return ResponseEntity.badRequest().body(e.getMessage());
        }
    }
	
	@DeleteMapping("/course/deleteCourse/{courseId}")
	public ResponseEntity<String> deleteCourse(@PathVariable Integer courseId) {
        try {
            courseService.deleteCourse(courseId);
            return ResponseEntity
            		.status(HttpStatus.OK)
            		.body("Curso exclu√≠do com sucesso!");
        } catch (RuntimeException e) {
            return ResponseEntity.badRequest().body(e.getMessage());
        }
    }
	
	
	@GetMapping("/course/AllCourses")
	public ResponseEntity<List<TbCourse>> allCourses( ){
	return ResponseEntity.status(HttpStatus.OK).body(courseRepository.findAll());
	}
	
	
	@GetMapping("/course/{id}")
	public ResponseEntity<Optional<TbCourse>> FindByIdCourse(@PathVariable Integer id){
		return ResponseEntity.status(HttpStatus.OK).body(courseService.returningCourseById(id));
	}
	
	
	@PutMapping("/course/{courseId}")
    public ResponseEntity<String> updateCourse(@PathVariable Integer courseId, @RequestBody TbCourse updatedCourse) {
         courseService.updateCourse(courseId, updatedCourse);
        return ResponseEntity.ok("Curso Atualizado com sucesso");
    }
}

