package br.com.school.educanet.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.school.educanet.model.TbCourse;
import br.com.school.educanet.repository.CourseRepository;

@RestController
public class CourseController {
	
	@Autowired
	private CourseRepository courseRepository;
	
	
	@PostMapping("/courseSave")
	public ResponseEntity<String> saveCouse (@RequestBody TbCourse tbCourse){
		TbCourse existingCourse = courseRepository.findByName(tbCourse.getCouserName());
		if(existingCourse != null) {
			ResponseEntity
			.status(HttpStatus.CONFLICT)
			.body("Não foi possivel criar um curso com esse nome pois já um existente");
		}
		courseRepository.save(tbCourse);
		return ResponseEntity
		.status(HttpStatus.OK)
		.body("curso criado com sucesso");
	}
	
	
	@DeleteMapping("/deleteVideo")
	public ResponseEntity<String> deleleteCoursEntity (@PathVariable Integer id){
		if( courseRepository.findById(id) != null) {
			courseRepository.deleteById(id);
			return ResponseEntity.status(HttpStatus.OK).body("Curso excluido com sucesso");
		}
		return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Id não encontrado");
	}
}
